name: CI & Deploy

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  lint-and-test:
    name: Lint and test ${{ matrix.project }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: [backend, frontend]
    defaults:
      run:
        working-directory: ${{ matrix.project }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: ${{ matrix.project }}/package-lock.json

      - name: Install dependencies
        run: npm install

      - name: Run lint
        run: npm run lint --if-present

      - name: Run tests
        run: npm run test --if-present

  deploy:
    name: Deploy applications
    needs: lint-and-test
    runs-on: ubuntu-latest
    env:
      RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Node.js for deployment CLIs
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install Railway CLI
        run: npm install -g @railway/cli

      - name: Deploy backend to Railway
        if: env.RAILWAY_TOKEN != ''
        working-directory: backend
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        run: |
          railway login --token "$RAILWAY_TOKEN"
          railway up --service funnel-analyzer-backend --detach

      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Pull Vercel environment info
        if: env.VERCEL_TOKEN != ''
        working-directory: frontend
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: vercel pull --yes --environment=production --token "$VERCEL_TOKEN"

      - name: Deploy frontend to Vercel
        if: env.VERCEL_TOKEN != ''
        working-directory: frontend
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: vercel deploy --prod --yes --token "$VERCEL_TOKEN"
